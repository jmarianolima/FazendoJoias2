class ChatService {
    constructor() {
        this.config = CONFIG.ASSISTANT_CONFIG;
        this.conversationHistory = [];
        this.CLAUDE_API_KEY = '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';
        this.CLAUDE_API_URL = 'https://api.anthropic.com/v1/messages';
        this.intencoes = {
            produtos: {
                palavrasChave: ['produto', 'joia', 'anel', 'colar', 'brinco', 'pulseira', 'acess√≥rio', 'pe√ßa', 'material'],
                respostas: [
                    "Nossa cole√ß√£o inclui an√©is, colares, brincos e pulseiras, todos feitos com materiais de alta qualidade. üíé",
                    "Temos uma variedade incr√≠vel de joias para todas as ocasi√µes. Que tipo de pe√ßa voc√™ est√° procurando? ‚ú®",
                    "Nossas joias s√£o feitas com materiais preciosos selecionados. Posso te mostrar algumas op√ß√µes espec√≠ficas! üëå"
                ]
            },
            precos: {
                palavrasChave: ['pre√ßo', 'valor', 'custo', 'parcela', 'pagamento', 'desconto', 'promo√ß√£o', 'pagar'],
                respostas: [
                    "Aceitamos diversas formas de pagamento: cart√£o de cr√©dito, PIX e boleto. Todas as transa√ß√µes s√£o seguras! üí≥",
                    "Oferecemos parcelamento em at√© 6x sem juros em todas as pe√ßas. Posso te ajudar a encontrar algo dentro do seu or√ßamento! üõçÔ∏è",
                    "Temos op√ß√µes para todos os or√ßamentos e frequentemente fazemos promo√ß√µes especiais! üè∑Ô∏è"
                ]
            },
            entrega: {
                palavrasChave: ['entrega', 'prazo', 'envio', 'frete', 'receber', 'correio', 'transportadora', 'enviar'],
                respostas: [
                    "O prazo de entrega varia de acordo com sua localiza√ß√£o, mas geralmente √© de 3 a 7 dias √∫teis. üì¶",
                    "Assim que seu pedido for aprovado, voc√™ receber√° um c√≥digo de rastreamento para acompanhar a entrega! üöö",
                    "Trabalhamos com as melhores transportadoras para garantir que sua joia chegue em perfeito estado! ‚ú®"
                ]
            },
            devolucao: {
                palavrasChave: ['troca', 'devolu√ß√£o', 'devolver', 'trocar', 'garantia', 'defeito', 'problema'],
                respostas: [
                    "Nossa pol√≠tica de trocas e devolu√ß√µes √© v√°lida por 7 dias ap√≥s o recebimento. Garantimos a qualidade das nossas pe√ßas! ‚ú®",
                    "Se houver qualquer problema com sua joia, nossa equipe est√° pronta para ajudar. Sua satisfa√ß√£o √© nossa prioridade! ü§ù",
                    "Oferecemos garantia em todas as nossas pe√ßas. Pode confiar! üíé"
                ]
            },
            materiais: {
                palavrasChave: ['ouro', 'prata', 'pedra', 'diamante', 'material', 'qualidade', 'quilate', 'pureza'],
                respostas: [
                    "Trabalhamos apenas com materiais de alta qualidade: ouro 18k, prata 925 e pedras preciosas certificadas. üíé",
                    "Todas as nossas joias passam por um rigoroso controle de qualidade para garantir a excel√™ncia do material. ‚ú®",
                    "Nossos materiais s√£o selecionados cuidadosamente para garantir beleza e durabilidade! üëå"
                ]
            },
            cuidados: {
                palavrasChave: ['cuidado', 'limpar', 'conservar', 'manuten√ß√£o', 'guardar', 'limpa', 'conserva√ß√£o'],
                respostas: [
                    "Para manter suas joias sempre bonitas, recomendamos guardar em local seco e limpar com pano macio regularmente. ‚ú®",
                    "Evite contato com produtos qu√≠micos e perfumes. Suas joias merecem cuidados especiais! üíù",
                    "Oferecemos dicas personalizadas de cuidados para cada tipo de joia. Como posso ajudar? ü§ù"
                ]
            },
            atendimento: {
                palavrasChave: ['ajuda', 'd√∫vida', 'atendimento', 'contato', 'falar', 'sac', 'suporte'],
                respostas: [
                    "Estou aqui para ajudar! Se precisar de algo mais espec√≠fico, nossa equipe de atendimento est√° dispon√≠vel por telefone ou email. ü§ù",
                    "Como posso ajudar voc√™ hoje? Estou aqui para tirar todas as suas d√∫vidas! üòä",
                    "Nosso time est√° sempre pronto para ajudar! Qual sua d√∫vida? üí´"
                ]
            }
        };
    }

    async sendMessage(userMessage) {
        try {
            // Adicionar a mensagem do usu√°rio ao hist√≥rico
            this.conversationHistory.push({
                role: "user",
                content: userMessage
            });

            // Tentar usar o Claude primeiro
            try {
                const resposta = await this.enviarParaClaude(userMessage);
                
                // Adicionar a resposta ao hist√≥rico
                this.conversationHistory.push({
                    role: "assistant",
                    content: resposta
                });

                // Manter o hist√≥rico limitado
                if (this.conversationHistory.length > 10) {
                    this.conversationHistory = this.conversationHistory.slice(-10);
                }

                return resposta;

            } catch (claudeError) {
                console.error('Erro ao usar Claude:', claudeError);
                // Fallback para o sistema de inten√ß√µes
                return this.identificarEResponder(userMessage);
            }

        } catch (error) {
            console.error('Erro ao processar mensagem:', error);
            return "Desculpe, ocorreu um erro ao processar sua mensagem. Como posso ajudar de outra forma? ü§î";
        }
    }

    async enviarParaClaude(mensagem) {
        const systemPrompt = `
            Voc√™ √© ${this.config.name}, a assistente virtual da loja Fazendo Joias.
            Voc√™ deve responder em portugu√™s do Brasil de forma natural e amig√°vel.
            
            Suas especialidades incluem:
            - Conhecimento sobre joias e acess√≥rios
            - Informa√ß√µes sobre materiais preciosos
            - Pol√≠tica de vendas e trocas da loja
            - Cuidados com joias
            - Tend√™ncias de moda em joalheria

            Diretrizes importantes:
            1. Mantenha as respostas concisas e diretas
            2. Use linguagem amig√°vel e profissional
            3. Foque em ajudar o cliente a encontrar o produto ideal
            4. Sempre mantenha o tom positivo e prestativo
            5. Use emojis ocasionalmente para tornar a conversa mais amig√°vel
            6. Se n√£o souber algo espec√≠fico, sugira contatar o SAC

            Informa√ß√µes importantes da loja:
            - Aceitamos cart√£o de cr√©dito, PIX e boleto
            - Parcelamento em at√© 6x sem juros
            - Prazo de entrega: 3 a 7 dias √∫teis
            - Garantia em todas as pe√ßas
            - Pol√≠tica de trocas: 7 dias ap√≥s recebimento
            - Materiais: ouro 18k, prata 925, pedras preciosas certificadas
        `;

        const requestBody = {
            model: "claude-3-opus-20240229",
            max_tokens: 150,
            temperature: 0.7,
            messages: [
                {
                    role: "assistant",
                    content: systemPrompt
                },
                ...this.conversationHistory.map(msg => ({
                    role: msg.role === "user" ? "user" : "assistant",
                    content: msg.content
                })),
                {
                    role: "user",
                    content: mensagem
                }
            ]
        };

        try {
            const response = await fetch(this.CLAUDE_API_URL, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'anthropic-version': '2023-06-01',
                    'x-api-key': this.CLAUDE_API_KEY
                },
                body: JSON.stringify(requestBody)
            });

            if (!response.ok) {
                const errorData = await response.json();
                console.error('Erro na resposta do Claude:', errorData);
                throw new Error(`Erro na chamada da API do Claude: ${response.status}`);
            }

            const data = await response.json();
            
            if (!data.content || !data.content[0] || !data.content[0].text) {
                console.error('Resposta inesperada do Claude:', data);
                throw new Error('Formato de resposta inv√°lido do Claude');
            }

            return data.content[0].text;

        } catch (error) {
            console.error('Erro detalhado ao chamar Claude:', error);
            throw error; // Propagar o erro para usar o fallback
        }
    }

    identificarEResponder(mensagem) {
        const mensagemLower = mensagem.toLowerCase();
        let intencoesIdentificadas = [];

        // Identificar todas as inten√ß√µes que correspondem √† mensagem
        for (const [categoria, dados] of Object.entries(this.intencoes)) {
            const temPalavraChave = dados.palavrasChave.some(palavra => 
                mensagemLower.includes(palavra.toLowerCase())
            );
            if (temPalavraChave) {
                intencoesIdentificadas.push(categoria);
            }
        }

        // Se nenhuma inten√ß√£o foi identificada
        if (intencoesIdentificadas.length === 0) {
            return "Desculpe, n√£o entendi completamente sua pergunta. Posso ajudar com informa√ß√µes sobre nossos produtos, pre√ßos, entregas, trocas ou cuidados com joias. Como posso te ajudar? üòä";
        }

        // Selecionar uma inten√ß√£o aleat√≥ria entre as identificadas
        const intencaoEscolhida = intencoesIdentificadas[Math.floor(Math.random() * intencoesIdentificadas.length)];
        const respostas = this.intencoes[intencaoEscolhida].respostas;
        
        // Retornar uma resposta aleat√≥ria para a inten√ß√£o escolhida
        return respostas[Math.floor(Math.random() * respostas.length)];
    }

    clearHistory() {
        this.conversationHistory = [];
    }
}

// Exportar o servi√ßo globalmente
window.chatService = new ChatService(); 